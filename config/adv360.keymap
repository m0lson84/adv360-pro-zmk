/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1              &kp N2          &kp N3          &kp N4     &kp N5  &kt MINUS                                                                                  &kp EQUAL          &kp N6  &kp N7    &kp N8               &kp N9                &kp N0                   &kp INS
&kp TAB    &kp Q               &kp W           &kp E           &kp R      &kp T   &none                                                                                      &none              &kp Y   &kp U     &kp I                &kp O                 &kp P                    &kp BSLH
&kp ESC    &kp A               &kp S           &kp D           &kp F      &kp G   &kp LS(LA(LC(LEFT_GUI)))  &kp LC(SPACE)  &kp LA(TAB)       &kp K_NEXT    &kp K_PLAY_PAUSE  &kp LA(LS(LCTRL))  &kp H   &kp J     &kp K                &kp L                 &kp SEMI                 &kp SQT
&kp LSHFT  &mt LEFT_CONTROL Z  &mt LEFT_ALT X  &mt LEFT_WIN C  &kp V      &kp B                                            &kp LEFT_ALT      &none                                              &kp N   &kp M     &mt RIGHT_WIN COMMA  &mt RIGHT_ALT PERIOD  &mt RIGHT_CONTROL SLASH  &kp RSHFT
&mo 1      &none               &none           &kp LEFT        &kp RIGHT          &kp SPACE                 &kp DEL        &kp LCTRL         &kp LEFT_GUI  &kp BACKSPACE     &kp ENTER                  &kp DOWN  &kp UP               &kp LBKT              &kp RBKT                 &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6  &trans                                      &trans  &kp F7           &kp F8           &kp F9           &kp F10       &kp F11          &kp F12
&trans  &kp Q   &kp W   &kp E   &kp R      &kp T   &trans                                      &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9        &kp KP_MINUS  &kp KP_DIVIDE    &trans
&trans  &kp A   &kp S   &kp D   &kp F      &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp KP_MULTIPLY  &trans
&trans  &kp Z   &kp X   &kp C   &kp V      &kp B                   &trans      &trans                  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp KP_EQUAL     &trans
&trans  &trans  &trans  &trans  &kp RIGHT          &trans  &trans  &trans      &trans  &trans  &trans                   &kp KP_NUMBER_0  &trans           &trans        &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP_ARROW)  &kp LC(SPACE)  &none          &none      &bootloader                                      &trans  &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT            &kp C_MUTE             &kp C_VOL_DN  &kp C_VOL_DN
&trans                &kp LC(Q)             &trans            &kp LC(E)      &trans         &kp LC(T)  &none                                            &trans  &kp HOME         &kp PAGE_DOWN     &kp PAGE_UP           &kp END                &trans        &trans
&trans                &trans                &trans            &trans         &trans         &trans     &none        &trans  &trans      &trans  &trans  &trans  &kp LEFT         &kp DOWN          &kp UP                &kp RIGHT              &trans        &trans
&kp LS(LC(Z))         &kp LC(Z)             &kp LS(LC(X))     &kp LS(LC(C))  &kp LS(LC(V))  &trans                          &trans      &trans                  &kp LS(LC(TAB))  &kp LC(TAB)       &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans        &trans
&trans                &trans                &trans            &trans         &trans                    &trans       &trans  &trans      &trans  &trans  &trans                   &trans            &trans                &trans                 &trans        &trans
            >;
        };
    };
};
